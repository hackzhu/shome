version: '3.4'
services:

  db: # 这里只是给每个容器单独配置一个名称
    image: mariadb # 具体的镜像名称，可以使用“:”指定镜像的版本
    restart: unless-stopped # 重启的选项，分为no、on-failure、on-failure:x、always、unless-stopped，具体可以自行搜索查看区别
    expose:
    # expose仅将指定的端口暴露给links的容器，而不对宿主机开放。
    # 和ports的区别在于，ports可以映射宿主机别的端口到容器中。
     - "3306"
    volumes:
    # volumes指的是将宿主机的路径映射到容器中的指定位置
     - ./db:/var/lib/mysql
    environment:
    # environment可以对容器创建指定多个环境变量
     - MYSQL_ROOT_PASSWORD=sqlword # 这里配置root密码
     - MYSQL_DATABASE=nextcloud
     - MYSQL_USER=nc # 这里配置一个非root账户给nextcloud使用
     - MYSQL_PASSWORD=ncword # 这里配置上面那个账号的密码

  cache:
    image: redis
    restart: unless-stopped
    expose:
     - "6379"
    volumes:
     - ./cache:/data
    command: redis-server --requirepass 'redisword' # 这里的redis_password换成你要配置的redis密码
    # command指的是启动容器后代替默认启动指令来启动服务的指令

  app:
    image: nextcloud:fpm
    restart: unless-stopped
    expose:
     - "9000"
    volumes:
     - ./app/html:/var/www/html
     - ./app/data:/var/www/html/data
     - ./app/config:/var/www/html/config
     - ./app/custom_apps:/var/www/html/custom_apps
    links:
    # links将容器与当前容器链接起来，以使得当前容器可以访问目标容器expose的端口
    # 格式为 容器的原名:映射到当前容器中的名称
     - db:db
     - cache:cache
    depends_on:
    # 依赖的容器列表，只有这些容器都成功启动了，才会启动当前容器
     - db
     - cache

  proxy: # 叫做proxy是因为是作为代理来提供服务
    image: nginx
    restart: unless-stopped
    expose:
      - "80"
    ports:
    # ports可将容器内的端口映射到宿主机上
    # 这里是将容器的443端口映射到宿主机的8000端口
     - 8000:443
    volumes:
     - ./app/html:/var/www/html
     - ./proxy/conf.d:/etc/nginx/conf.d:ro
     - ./proxy/ssl_certs:/etc/nginx/ssl_certs:ro
    links:
     - app:app
    depends_on:
     - app
